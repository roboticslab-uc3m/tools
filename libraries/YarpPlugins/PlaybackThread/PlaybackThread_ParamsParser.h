/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Thu Apr 17 12:02:47 2025


#ifndef PLAYBACKTHREAD_PARAMSPARSER_H
#define PLAYBACKTHREAD_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class PlaybackThread.
*
* These are the used parameters:
* | Group name | Parameter name | Type        | Units | Default Value | Required | Description                           | Notes                 |
* |:----------:|:--------------:|:-----------:|:-----:|:-------------:|:--------:|:-------------------------------------:|:---------------------:|
* | -          | file           | string      | -     | test.txt      | 0        | file name                             | -                     |
* | -          | timeIdx        | int         | -     | 0             | 0        | index of timestamp                    | -                     |
* | -          | timeScale      | double      | -     | 1.0           | 0        | time scaling of timestamp             | -                     |
* | -          | mask           | vector<int> | -     | -             | 1        | filter to apply to each item in a row | 1: process, 0: ignore |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device PlaybackThread --file test.txt --timeIdx 0 --timeScale 1.0 --mask <mandatory_value>
* \endcode
*
* \code{.unparsed}
* yarpdev --device PlaybackThread --mask <mandatory_value>
* \endcode
*
*/

class PlaybackThread_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    PlaybackThread_ParamsParser();
    ~PlaybackThread_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"PlaybackThread"};
    const std::string m_device_name = {"PlaybackThread"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_file_defaultValue = {"test.txt"};
    const std::string m_timeIdx_defaultValue = {"0"};
    const std::string m_timeScale_defaultValue = {"1.0"};
    const std::string m_mask_defaultValue = {""};

    std::string m_file = {"test.txt"};
    int m_timeIdx = {0};
    double m_timeScale = {1.0};
    std::vector<int> m_mask = {}; //This default value is autogenerated. It is highly recommended to provide a suggested value also for mandatory parameters.

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
