include(GitInfo) # YCM

# Define current version.
set(ROBOTICSLAB_TOOLS_VERSION_MAJOR 0)
set(ROBOTICSLAB_TOOLS_VERSION_MINOR 1)
set(ROBOTICSLAB_TOOLS_VERSION_PATCH 0)

set(ROBOTICSLAB_TOOLS_VERSION
    ${ROBOTICSLAB_TOOLS_VERSION_MAJOR}.${ROBOTICSLAB_TOOLS_VERSION_MINOR}.${ROBOTICSLAB_TOOLS_VERSION_PATCH})

set(ROBOTICSLAB_TOOLS_VERSION_SHORT ${ROBOTICSLAB_TOOLS_VERSION})

# Retrieve current revision from Git working tree.
git_wt_info(SOURCE_DIR "${CMAKE_SOURCE_DIR}"
            PREFIX ROBOTICSLAB_TOOLS)

if(DEFINED ROBOTICSLAB_TOOLS_GIT_WT_HASH)
    if(ROBOTICSLAB_TOOLS_GIT_WT_TAG_REVISION GREATER 0)
        set(ROBOTICSLAB_TOOLS_VERSION_REVISION ${ROBOTICSLAB_TOOLS_GIT_WT_TAG_REVISION})
        string(REPLACE "-" "" _date ${ROBOTICSLAB_TOOLS_GIT_WT_AUTHOR_DATE})
        set(ROBOTICSLAB_TOOLS_VERSION_SOURCE
            "${_date}.${ROBOTICSLAB_TOOLS_GIT_WT_DATE_REVISION}+git${ROBOTICSLAB_TOOLS_GIT_WT_HASH_SHORT}")
    endif()

    if(ROBOTICSLAB_TOOLS_GIT_WT_DIRTY)
        set(ROBOTICSLAB_TOOLS_VERSION_DIRTY "dirty")
    endif()
endif()

if(DEFINED ROBOTICSLAB_TOOLS_VERSION_SOURCE)
    if(NOT "${ROBOTICSLAB_TOOLS_GIT_WT_TAG}" STREQUAL "v${ROBOTICSLAB_TOOLS_VERSION_SHORT}")
        set(ROBOTICSLAB_TOOLS_VERSION
            "${ROBOTICSLAB_TOOLS_VERSION_SHORT}+${ROBOTICSLAB_TOOLS_VERSION_SOURCE}")
    else()
        set(ROBOTICSLAB_TOOLS_VERSION
           "${ROBOTICSLAB_TOOLS_VERSION_SHORT}+${ROBOTICSLAB_TOOLS_VERSION_REVISION}-${ROBOTICSLAB_TOOLS_VERSION_SOURCE}")
    endif()
elseif(NOT "${ROBOTICSLAB_TOOLS_GIT_WT_TAG}" STREQUAL "v${ROBOTICSLAB_TOOLS_VERSION_SHORT}")
    set(ROBOTICSLAB_TOOLS_VERSION "${ROBOTICSLAB_TOOLS_VERSION_SHORT}~dev")
else()
    set(ROBOTICSLAB_TOOLS_VERSION "${ROBOTICSLAB_TOOLS_VERSION_SHORT}")
endif()

if(DEFINED ROBOTICSLAB_TOOLS_VERSION_DIRTY)
    set(ROBOTICSLAB_TOOLS_VERSION "${ROBOTICSLAB_TOOLS_VERSION}+${ROBOTICSLAB_TOOLS_VERSION_DIRTY}")
endif()

# Print version.
message(STATUS "ROBOTICSLAB_TOOLS version: ${ROBOTICSLAB_TOOLS_VERSION_SHORT} (${ROBOTICSLAB_TOOLS_VERSION})")
